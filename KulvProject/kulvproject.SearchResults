---- content_handler Matches (10 in 4 files) ----
Ngx_http_core_module.c (h:\dropbox\github\readnginxsrc\src\http):    r->content_handler = NULL;//首先初始化content_handler，这个会在ngx_http_core_content_phase里面使用
Ngx_http_core_module.c (h:\dropbox\github\readnginxsrc\src\http):	//这个很重要，更新location配置，主要是 r->content_handler = clcf->handler;设置回调从而在content_phrase阶段用这个handler。
Ngx_http_core_module.c (h:\dropbox\github\readnginxsrc\src\http):    if (r->content_handler) {
Ngx_http_core_module.c (h:\dropbox\github\readnginxsrc\src\http):        ngx_http_finalize_request(r, r->content_handler(r));
Ngx_http_core_module.c (h:\dropbox\github\readnginxsrc\src\http)://主要的还有 r->content_handler = clcf->handler;，设置回调。
Ngx_http_core_module.c (h:\dropbox\github\readnginxsrc\src\http):        r->content_handler = clcf->handler;
Ngx_http_core_module.c (h:\dropbox\github\readnginxsrc\src\http):            r->content_handler = NULL;
Ngx_http_proxy_module.c (h:\dropbox\github\readnginxsrc\src\http\modules):	即ngx_http_core_content_phase()的时候，会调用r->content_handler(r)，即ngx_http_proxy_handler。*/
Ngx_http_request.c (h:\dropbox\github\readnginxsrc\src\http):        r->content_handler = NULL;
Ngx_http_request.h (h:\dropbox\github\readnginxsrc\src\http):    ngx_http_handler_pt               content_handler;
